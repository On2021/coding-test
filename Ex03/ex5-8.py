#-*- coding: utf-8 -*-
'''
Created on 2022. 7. 6.

@author: dhkdr
'''

# DFS
# 예제 : DFS (p142)

# DFS 함수 정의
def dfs(graph, v, visited): # 그래프정보와 방문처리정보를 이용함
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end=' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]: # 방문하지 않은 상태면,
            dfs(graph, i, visited) # 재귀함수를 이용해 방문해주세욥!

# 각 노드가 연결된 정보를 리스트 자료형으로 표현(2차원 리스트)
graph = [
  [], # 0번 노드는 비워주세요
  [2, 3, 8],
  [1, 7],
  [1, 4, 5],
  [3, 5],
  [3, 4],
  [7],
  [2, 6, 8],
  [1, 7]
]

# 각 노드가 방문된 정보를 리스트 자료형으로 표현(1차원 리스트) => 방문처리를 위한 1차원 리스트를 만들어줌
visited = [False] * 9
# 기본 노드를 false로 초기화해놔서 하나도 방문하지 않은 상태로 만들어줌
# 0번 인덱스를 사용하지 않을거라 8+1 = 9로 설정해줌

# 정의된 DFS 함수 호출
dfs(graph, 1, visited)

# https://data-marketing-bk.tistory.com/44 참고하기
# DFS에서 데이터를 찾을 때는 항상 "앞으로 찾아야 가야할 노드"와 "이미 방문한 노드"를 기준으로 데이터를 탐색을 합니다.
# 그래서 특정 노드가 "앞으로 찾아야 가야할 노드"라면 계속 검색을 하는 것이고, "이미 방문한 노드"면 무시하거나 따로 저장하면 됩니다.